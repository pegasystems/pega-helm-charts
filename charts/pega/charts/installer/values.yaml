---
image: "YOUR_IMAGE_NAME"
# Creates a new System and replaces this with default system.Default is pega
systemName: "pega"
# During installations, the system name above is generated with the following production level.Default is 2
# The system production level can be set to one of the below integer values (1-5):
# 5 = production;
# 4 = preproduction;
# 3 = test;
# 2 = development;
# 1 = experimental
productionLevel: 2
# UDF generation will be skipped if this property is set to true
bypassUdfGeneration: "true"
# Temporary password for administrator@pega.com that is used to install Pega Platform
adminPassword: ""
# Run the Static Assembler ('true' to run, 'false' to not run)
assembler: ""
# Bypass automatically truncating PR_SYS_UPDATESCACHE . Default is false.
bypassTruncateUpdatescache: "false"
# Distribution kit URL
distributionKitURL: ""
# A manually managed Persistent Volume Claim for mounting upgrade artifacts. You must create this PVC manually before you bind the volume.
# The installer job persists upgrade artifacts to this Persistent Volume to support automatically resuming rules_upgrade from point of failure when you use custom upgradeType.
# To use this function, set the automaticResumeEnabled parameter to true.
installerMountVolumeClaimName: ""
# A manually managed Persistent Volume Claim for mounting distribution kit. Given PVC must be created manually before volume will be bound.
# This as an alternative to distributionKitURL. If both are specified then distributionKitURL will take precedence.
# Only distriubtion kit zip file is expected inside the volume.
distributionKitVolumeClaimName: ""
# Bypass loading engine classes into database.
bypassLoadEngineClasses: "false"
# Bypass loading assembly classes into database
bypassLoadAssembledClasses: "false"
# If 'true', Helm will wait for the install or upgrade to finish, and only succeed if the job completes without error.
waitForJobCompletion: "false"
threads:
  # Maximum Idle Thread.Default is 5
  maxIdle: 5
  # Maximum Wait Thread.Default is -1
  maxWait: -1
  # Maximum Active Thread.Default is 10
  maxActive: 10
zos:
  # Z/OS SITE-SPECIFIC PROPERTIES FILE
  zosProperties: "/opt/pega/config/DB2SiteDependent.properties"
  # Specify the workload manager to load UDFs into db2zos
  db2zosUdfWlm: ""
# Upgrade specific properties
upgrade:
  # Type of upgrade
  # Valid upgradeType values are 'in-place' , 'zero-downtime' , 'custom' , 'out-of-place-rules' , 'out-of-place-data' .
  # 'out-of-place' is deprecated and supported only with Helm charts prior to version 1.4.
  upgradeType: ""
  # In case of upgradeType: 'custom', specify the steps for your custom upgrade process using the upgradeSteps: parameter.
  # Separate each step with a comma (,) and specify the order in which you want to initiate the steps.
  # Supported upgrade steps are: enable_cluster_upgrade rules_migration rules_upgrade data_upgrade disable_cluster_upgrade.
  upgradeSteps: ""
  # Specify a name for a target rules schema that the upgrade process creates for patches and upgrades.
  targetRulesSchema: ""
  # Specify a name for a target data schema that the upgrade process creates for patches and upgrades.
  # For postgres databases that you are upgrading from Pega Infinity version 8.4.0 and later
  # And for Oracle databases that you are upgrading from Pega Infinity version 8.4.3 and later.
  targetDataSchema: ""
  # The commit count to use when loading database tables
  dbLoadCommitRate: 100
  # Update existing application will be run if this property is set to true
  updateExistingApplications: "false"
  # Runs the Update Applications Schema utility to update the cloned Rule, Data, Work
  # And Work History tables with the schema changes in the latest base tables if this property is set to true
  updateApplicationsSchema: "false"
  # Generate and execute an SQL script to clean old rulesets and their rules from the system if this property is set to true
  runRulesetCleanup: "false"
  # Rebuild Database Rules Indexes after Rules Load to improve Database Access Performance
  rebuildIndexes: "false"
  # This flag has to be set for CMC use cases if hazelcast is running in client server mode. Default is false.Set it to true for HZ c/s mode.
  # This is needed to ensure Installer connect to HZ C/S while data upgrade.
  isHazelcastClientServer: "false"
  # Specify the server URL and the required server username and password to access a Pega REST server used to perform pre- and post-update actions during zero-downtime updates.
  pegaRESTServerURL: ""
  pegaRESTUsername: ""
  pegaRESTPassword: ""
  # Specify automaticResumeEnabled to support resuming rules_upgrade from point of failure. You can use this functionality only when you use "custom" upgradeType.
  automaticResumeEnabled: "false"

# Memory, CPU, and ephemeral storage settings for installer
# Ephemeral storage recommended size is 10G
resources:
  requests:
    memory: "5Gi"
    cpu: 1
    # ephemeralStorage: ""
  limits:
    memory: "6Gi"
    cpu: 2
    # ephemeralStorage: ""

shareProcessNamespace: false

# Provide custom side car container configuration for installer
# sidecarContainers:
#  - name: <SIDECAR_CONTAINER_NAME>
#    image: <SIDECAR_IMAGE>

# If a nodeSelector is required for the installer pod, it may be specified here:
# nodeSelector:
#   label: value

# Apply securityContext to installer pod. For example to set `runAsNonRoot: true`:
# securityContext:
#   runAsNonRoot: true

# Add extra pod labels
# podLabels:
#   label: value
