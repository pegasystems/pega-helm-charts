---
image: "YOUR_HAZELCAST_IMAGE:TAG"
clusteringServiceImage: "YOUR_CLUSTERING_SERVICE_IMAGE:TAG"
imagePullPolicy: "Always"
# Enter the number of initial members in Hazelcast cluster.
replicas: 3
# Setting below to true will deploy the Pega Platform in client-server Hazelcast model for version 8.6 through 8.7.x.
# Note: Make sure to set this value as "false" in case of Pega platform version before "8.6". If not set this will fail the installation.
enabled: true
# Setting below to true will deploy the Pega Platform in client-server Hazelcast model for version 8.8 and later.
# Note: Make sure to set this value as "false" in case of Pega platform version before "8.8". If not set this will fail the installation.
clusteringServiceEnabled: false

# Setting related to Hazelcast migration.
migration:
  # Set to `true` to initiate the migration job.
  initiateMigration: false
  # Reference the `platform/clustering-service-kubectl` Docker image to create the migration job.
  migrationJobImage: "YOUR_MIGRATION_JOB_IMAGE:TAG"
  # Set to `true` when migrating from embedded Hazelcast.
  embeddedToCSMigration: false

# username to be used in client-server Hazelcast model for authentication.
username: ""
# password to be used in client-server Hazelcast model for authentication.
password: ""

# Memory and CPU settings for HZ service
resources:
  requests:
    memory: "1Gi"
    cpu: 1
  limits:
    memory: "1Gi"
    cpu: 2
# client settings for Hazelcast
client:
  clusterName: "PRPC"
# Server side settings for Hazelcast
server:
  java_opts: "-XX:MaxRAMPercentage=80.0 -XX:InitialRAMPercentage=80.0 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/hazelcast/logs/heapdump.hprof
   -XX:+UseG1GC -XX:NewRatio=3 -XshowSettings:vm -XX:InitiatingHeapOccupancyPercent=45
   -Xlog:gc*,gc+phases=debug:file=/opt/hazelcast/logs/gc.log:time,pid,tags:filecount=5,filesize=3m"
  jmx_enabled: "true"
  health_monitoring_level: "OFF"
  operation_generic_thread_count: ""
  operation_thread_count: ""
  io_thread_count: ""
  event_thread_count: ""
  max_join_seconds: ""
  group_name: "PRPC"
  clustering_service_group_name: "prpchz"
  mancenter_url: ""
  graceful_shutdown_max_wait_seconds: "600"
  service_dns_timeout: ""
  logging_level: "info"
  diagnostics_enabled: "true"
  diagnostics_metric_level: "info"
  diagnostic_log_file_size_mb: "50"
  diagnostics_file_count: "3"

# Apply securityContext to clustering service pods. For example to set `runAsUser: 1000`:
# securityContext:
#   runAsUser: 1000
